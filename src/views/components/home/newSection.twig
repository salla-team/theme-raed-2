<section class="store-features">
  <h2 class="section-title">مميزات المتجر</h2>
  <div class="features-container">
    <!-- ميزة 1 -->
    <div class="feature-box fade-item">
      <div class="icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#F5F5DC" width="40" height="40">
          <path d="M12 12c2.7 0 4.8-2.2 4.8-4.8S14.7 2.4 12 2.4 7.2 4.6 7.2 7.2 9.3 12 12 12zm0 2.4c-3.2 0-9.6 1.6-9.6 4.8v2.4h19.2v-2.4c0-3.2-6.4-4.8-9.6-4.8z"/>
        </svg>
      </div>
      <h3 class="counter" data-target="2793">0</h3>
      <p>+ عميل يحب منتجاتنا</p>
    </div>

    <!-- ميزة 2 -->
    <div class="feature-box fade-item">
      <div class="icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#FFD700" width="40" height="40">
          <path d="M12 .587l3.668 7.431 8.2 1.192-5.934 5.78 1.4 8.174L12 18.897l-7.334 3.852 1.4-8.174L.132 9.21l8.2-1.192z"/>
        </svg>
      </div>
      <h3 class="counter" data-target="5">0</h3>
      <p>5/5 أفضل متجر</p>
    </div>

    <!-- ميزة 3 -->
    <div class="feature-box fade-item">
      <div class="icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#F5F5DC" width="40" height="40">
          <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
        </svg>
      </div>
      <h3 class="counter" data-target="399">0</h3>
      <p>+ عدد التقييمات</p>
    </div>
  </div>
</section>

<style>
.store-features {
  background: #F5F5DC;
  color: #3A4F20;
  padding: 30px 15px;
  border-radius: 12px;
  text-align: center;
  direction: rtl;
  margin: 20px 0;
}

.section-title {
  font-size: 1.5rem;
  color: #556B2F;
  margin-bottom: 20px;
  font-weight: bold;
}

.features-container {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 30px;
}

.feature-box {
  background: #89b929ff;
  padding: 20px;
  border-radius: 12px;
  width: 180px;
  transition: transform 0.3s ease, opacity 0.5s ease;
  color: #fff;
  opacity: 0;
  transform: scale(0.8);
}

.feature-box.visible {
  opacity: 1;
  transform: scale(1);
}

.feature-box:hover {
  transform: scale(1.05);
  background: #556B2F;
}

.icon {
  margin-bottom: 10px;
}

.feature-box h3 {
  font-size: 1.8rem;
  color: #F5F5DC;
  margin: 5px 0;
  font-weight: bold;
}

.feature-box p {
  font-size: 0.9rem;
  color: #F5F5DC;
}

@media (max-width: 768px) {
  .features-container {
    gap: 15px;
  }
  .feature-box {
    width: 140px;
    padding: 15px;
  }
  .feature-box h3 {
    font-size: 1.4rem;
  }
}
</style>

<script>
function animateCounterEaseOut(counter) {
  const target = +counter.getAttribute('data-target');
  let start = 0;
  let startTime = null;
  const duration = 2000;

  function easeOut(t) {
    return 1 - Math.pow(1 - t, 3);
  }

  function update(timestamp) {
    if (!startTime) startTime = timestamp;
    const progress = Math.min((timestamp - startTime) / duration, 1);
    const value = Math.floor(easeOut(progress) * target);
    counter.textContent = value;

    if (progress < 1) {
      requestAnimationFrame(update);
    } else {
      counter.textContent = target;
    }
  }

  requestAnimationFrame(update);
}

const counters = document.querySelectorAll('.counter');
const featureBoxes = document.querySelectorAll('.feature-box');

const observer = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      entry.target.classList.add('visible');
      const counter = entry.target.querySelector('.counter');
      if (counter) animateCounterEaseOut(counter);
    } else {
      entry.target.classList.remove('visible');
      const counter = entry.target.querySelector('.counter');
      if (counter) counter.textContent = "0"; // إعادة التصفير عند الخروج
    }
  });
}, { threshold: 0.5 });

featureBoxes.forEach(box => observer.observe(box));
</script>
